
package Views;

import Connection.AlumnoData;
import Connection.InscripcionData;
import Entidades.*;
import java.util.List;
import javax.swing.table.DefaultTableModel;


public class Form_Inscripcion extends javax.swing.JInternalFrame {
    private DefaultTableModel model = new DefaultTableModel(){
    
    @Override
    public boolean isCellEditable(int a, int b){
        
        return false;
    }
};
   
    public Form_Inscripcion() {
        initComponents();
        datos= new InscripcionData();
        datosalumnos = new AlumnoData();
        cargarCombo();
        armarCabecera();
        jrnoiscriptas.setSelected(true);       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcalumnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jrinscriptas = new javax.swing.JRadioButton();
        jrnoiscriptas = new javax.swing.JRadioButton();
        jbinscripcion = new javax.swing.JButton();
        jbsalida = new javax.swing.JButton();
        jbanularinscripcion = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtinscripcion = new javax.swing.JTable();

        jLabel1.setText("Formulario de Inscripocion");

        jLabel2.setText("Seleccione un alumno:");

        jcalumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcalumnosActionPerformed(evt);
            }
        });

        jLabel3.setText("Listado de Materias");

        jrinscriptas.setText("Materias inscriptas");
        jrinscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrinscriptasActionPerformed(evt);
            }
        });

        jrnoiscriptas.setText("Materias no inscriptas");
        jrnoiscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrnoiscriptasActionPerformed(evt);
            }
        });

        jbinscripcion.setText("Inscribir");
        jbinscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbinscripcionActionPerformed(evt);
            }
        });

        jbsalida.setText("Salir");
        jbsalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsalidaActionPerformed(evt);
            }
        });

        jbanularinscripcion.setText("Anular Inscripcion");
        jbanularinscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbanularinscripcionActionPerformed(evt);
            }
        });

        jtinscripcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtinscripcion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jbinscripcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbanularinscripcion)
                        .addGap(121, 121, 121)
                        .addComponent(jbsalida)))
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jcalumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrinscriptas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jrnoiscriptas)
                                .addGap(13, 13, 13)))))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcalumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrinscriptas)
                    .addComponent(jrnoiscriptas))
                .addGap(57, 57, 57)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbinscripcion)
                    .addComponent(jbsalida)
                    .addComponent(jbanularinscripcion))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrinscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrinscriptasActionPerformed
        if(jrinscriptas.isSelected()){
            jrnoiscriptas.setSelected(false);        
        }else{
            jrnoiscriptas.setSelected(true); 
        }
        jbinscripcion.setEnabled(false);
        jbanularinscripcion.setEnabled(true);
              
        borrarFilas();
        cargarFilas();
    }//GEN-LAST:event_jrinscriptasActionPerformed

    private void jrnoiscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrnoiscriptasActionPerformed
        if(jrnoiscriptas.isSelected()){
            jrinscriptas.setSelected(false);        
        }else{
            jrinscriptas.setSelected(true);
        }
        jbinscripcion.setEnabled(true);
        jbanularinscripcion.setEnabled(false);
                
        borrarFilas();
        cargarFilas();
        
    }//GEN-LAST:event_jrnoiscriptasActionPerformed

    private void jbinscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbinscripcionActionPerformed
        int fila = jtinscripcion.getSelectedRow();               
        materiaincribir = new Materia((int)jtinscripcion.getValueAt(fila, 0),jtinscripcion.getValueAt(fila, 1)+"",(int)jtinscripcion.getValueAt(fila, 2),true);        
        alumnoincribir = (Alumno)jcalumnos.getSelectedItem();        
        inscripcion= new Inscripcion(alumnoincribir,materiaincribir,0.00);        
        datos.guardarInscripcion(inscripcion);
        borrarFilas();
        cargarFilas();
    }//GEN-LAST:event_jbinscripcionActionPerformed

    private void jbanularinscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbanularinscripcionActionPerformed
        int fila = jtinscripcion.getSelectedRow();        
        alumnoincribir = (Alumno)jcalumnos.getSelectedItem();
        inscripcion= new Inscripcion(alumnoincribir,materiaincribir,0.00);
        datos.borrarInscripcionMateriaAlumno(alumnoincribir.getIdAlumno(), (int)jtinscripcion.getValueAt(fila, 0));
         borrarFilas();
         cargarFilas(); 
    }//GEN-LAST:event_jbanularinscripcionActionPerformed

    private void jcalumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcalumnosActionPerformed
       borrarFilas();
       cargarFilas();       
    }//GEN-LAST:event_jcalumnosActionPerformed

    private void jbsalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsalidaActionPerformed
        dispose();
    }//GEN-LAST:event_jbsalidaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbanularinscripcion;
    private javax.swing.JButton jbinscripcion;
    private javax.swing.JButton jbsalida;
    private javax.swing.JComboBox<Alumno> jcalumnos;
    private javax.swing.JRadioButton jrinscriptas;
    private javax.swing.JRadioButton jrnoiscriptas;
    private javax.swing.JTable jtinscripcion;
    // End of variables declaration//GEN-END:variables
    private List<Alumno> alumnos;    
    private List<Materia> materias;
    private AlumnoData datosalumnos;
    private InscripcionData datos;
    private Inscripcion inscripcion;
    private Materia materiaincribir;
    private Alumno alumnoincribir;
    
    
    
    private void cargarCombo(){
        
        alumnos = datosalumnos.listarAlumnos();        
        for(Alumno alu:alumnos){
            jcalumnos.addItem(alu);
        }
        
    }
    
    private void armarCabecera(){
        
        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Año");
        jtinscripcion.setModel(model);
    }
    
    private void borrarFilas(){        
            int f = model.getRowCount()-1;
            for(;f>=0;f--){
                model.removeRow(f);
            }                
    }
    
    private void cargarFilas(){
        Alumno uno = (Alumno)jcalumnos.getSelectedItem();
        if(jrinscriptas.isSelected()){
            materias = datos.obtenerMateriasCursadas(uno.getIdAlumno());
        }else{
            materias = datos.obtenerMateriasNoCursadas(uno.getIdAlumno());
        }
        
        for(Materia mate:materias){
            model.addRow(new Object[]{
                mate.getIdMateria(),
                mate.getNombre(),
                mate.getAnioMateria()            
            });
        }
        
    }
    
}
