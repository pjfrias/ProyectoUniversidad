package Views;

import Connection.AlumnoData;
import Connection.InscripcionData;
import Entidades.*;
import java.util.List;
import javax.swing.table.DefaultTableModel;

public class Form_Inscripcion extends javax.swing.JInternalFrame {

    private DefaultTableModel model = new DefaultTableModel() {

        @Override
        public boolean isCellEditable(int a, int b) {

            return false;
        }
    };

    public Form_Inscripcion() {
        initComponents();
        datos = new InscripcionData();
        datosalumnos = new AlumnoData();
        cargarCombo();
        armarCabecera();
        jrnoiscriptas.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jcalumnos = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jrinscriptas = new javax.swing.JRadioButton();
        jrnoiscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtinscripcion = new javax.swing.JTable();
        jbinscripcion = new javax.swing.JButton();
        jbsalida = new javax.swing.JButton();
        jbanularinscripcion = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Formulario de Inscripcion");

        jLabel3.setText("Seleccione un alumno:");

        jcalumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcalumnosActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Listado de Materias");

        jrinscriptas.setText("Materias Inscriptas");
        jrinscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrinscriptasActionPerformed(evt);
            }
        });

        jrnoiscriptas.setText("Materias no inscriptas");
        jrnoiscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrnoiscriptasActionPerformed(evt);
            }
        });

        jtinscripcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtinscripcion);

        jbinscripcion.setText("Inscribir");
        jbinscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbinscripcionActionPerformed(evt);
            }
        });

        jbsalida.setText("Salir");
        jbsalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsalidaActionPerformed(evt);
            }
        });

        jbanularinscripcion.setText("Anular Inscripcion");
        jbanularinscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbanularinscripcionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jbinscripcion)
                                .addGap(101, 101, 101)
                                .addComponent(jbanularinscripcion))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jrinscriptas)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbsalida)
                                .addGap(85, 85, 85))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jrnoiscriptas)
                                .addGap(78, 78, 78))
                            .addComponent(jcalumnos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcalumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrnoiscriptas)
                    .addComponent(jrinscriptas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbinscripcion)
                    .addComponent(jbsalida)
                    .addComponent(jbanularinscripcion))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrinscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrinscriptasActionPerformed
        if (jrinscriptas.isSelected()) {
            jrnoiscriptas.setSelected(false);
        } else {
            jrnoiscriptas.setSelected(true);
        }
        jbinscripcion.setEnabled(false);
        jbanularinscripcion.setEnabled(true);

        borrarFilas();
        cargarFilas();
    }//GEN-LAST:event_jrinscriptasActionPerformed

    private void jbsalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsalidaActionPerformed
        dispose();
    }//GEN-LAST:event_jbsalidaActionPerformed

    private void jcalumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcalumnosActionPerformed
        borrarFilas();
        cargarFilas();
    }//GEN-LAST:event_jcalumnosActionPerformed

    private void jbanularinscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbanularinscripcionActionPerformed
        int fila = jtinscripcion.getSelectedRow();
        alumnoincribir = (Alumno) jcalumnos.getSelectedItem();
        inscripcion = new Inscripcion(alumnoincribir, materiaincribir, 0.00);
        datos.borrarInscripcionMateriaAlumno(alumnoincribir.getIdAlumno(), (int) jtinscripcion.getValueAt(fila, 0));
        borrarFilas();
        cargarFilas();
    }//GEN-LAST:event_jbanularinscripcionActionPerformed

    private void jbinscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbinscripcionActionPerformed
        int fila = jtinscripcion.getSelectedRow();
        materiaincribir = new Materia((int) jtinscripcion.getValueAt(fila, 0), jtinscripcion.getValueAt(fila, 1) + "", (int) jtinscripcion.getValueAt(fila, 2), true);
        alumnoincribir = (Alumno) jcalumnos.getSelectedItem();
        inscripcion = new Inscripcion(alumnoincribir, materiaincribir, 0.00);
        datos.guardarInscripcion(inscripcion);
        borrarFilas();
        cargarFilas();
    }//GEN-LAST:event_jbinscripcionActionPerformed

    private void jrnoiscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrnoiscriptasActionPerformed
        if (jrnoiscriptas.isSelected()) {
            jrinscriptas.setSelected(false);
        } else {
            jrinscriptas.setSelected(true);
        }
        jbinscripcion.setEnabled(true);
        jbanularinscripcion.setEnabled(false);

        borrarFilas();
        cargarFilas();
    }//GEN-LAST:event_jrnoiscriptasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbanularinscripcion;
    private javax.swing.JButton jbinscripcion;
    private javax.swing.JButton jbsalida;
    private javax.swing.JComboBox<Alumno> jcalumnos;
    private javax.swing.JRadioButton jrinscriptas;
    private javax.swing.JRadioButton jrnoiscriptas;
    private javax.swing.JTable jtinscripcion;
    // End of variables declaration//GEN-END:variables
    private List<Alumno> alumnos;
    private List<Materia> materias;
    private AlumnoData datosalumnos;
    private InscripcionData datos;
    private Inscripcion inscripcion;
    private Materia materiaincribir;
    private Alumno alumnoincribir;

    private void cargarCombo() {
        alumnos = datosalumnos.listarAlumnos();
        for (Alumno alu : alumnos) {
            jcalumnos.addItem(alu);
        }
    }

    private void armarCabecera() {

        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Año");
        jtinscripcion.setModel(model);
    }

    private void borrarFilas() {
        int f = model.getRowCount() - 1;
        for (; f >= 0; f--) {
            model.removeRow(f);
        }
    }

    private void cargarFilas() {
        Alumno uno = (Alumno) jcalumnos.getSelectedItem();
        if (jrinscriptas.isSelected()) {
            materias = datos.obtenerMateriasCursadas(uno.getIdAlumno());
        } else {
            materias = datos.obtenerMateriasNoCursadas(uno.getIdAlumno());
        }

        for (Materia mate : materias) {
            model.addRow(new Object[]{
                mate.getIdMateria(),
                mate.getNombre(),
                mate.getAnioMateria()
            });
        }

    }

}
